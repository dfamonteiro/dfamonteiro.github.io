<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Compilers on Daniel&#39;s blog</title>
    <link>https://dfamonteiro.com/tags/compilers/</link>
    <description>Recent content in Compilers on Daniel&#39;s blog</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Wed, 21 Jul 2021 23:11:53 +0100</lastBuildDate>
    <atom:link href="https://dfamonteiro.com/tags/compilers/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Developing an intermediate representation of Brainfuck using Rust</title>
      <link>https://dfamonteiro.com/posts/brainfuck-ir/</link>
      <pubDate>Wed, 21 Jul 2021 23:11:53 +0100</pubDate>
      <guid>https://dfamonteiro.com/posts/brainfuck-ir/</guid>
      <description>&lt;p&gt;Brainfuck is an interesting programming language, to say the least. As the most prominent &lt;a href=&#34;https://en.wikipedia.org/wiki/Esoteric_programming_language&#34; title=&#34;Esoteric programming language Wikipedia page&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Esoteric programming language&lt;/a&gt; out there, it provides a truly cursed programming experience. It is quite minimalistic as well, featuring only 8 distinct instructions and a programming model that can be best described as a glorified &lt;a href=&#34;https://en.wikipedia.org/wiki/Turing_machine&#34; title=&#34;Turing machine Wikipedia page&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Turing machine&lt;/a&gt;, making writing a Brainfuck compiler an interesting programming exercise. However, we might as well go a step further and develop an intermediate representation for it, because, well, why not?&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
